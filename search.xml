<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown笔记</title>
    <url>/2020/04/22/Markdown%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>（我又稍微修改了一下这篇文章🕵️‍♂️）</p>
<h4 id="一-Markdown是什么？"><a href="#一-Markdown是什么？" class="headerlink" title="一. Markdown是什么？"></a>一. Markdown是什么？</h4><p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br><strong>Markdown</strong>也可以理解为将以MARKDOWN语言编写的语言转换成HTML内容的工具，最初是一个perl脚本<em>Markdown.pl</em>。    </p>
<h5 id="👴为什么要用它？"><a href="#👴为什么要用它？" class="headerlink" title="👴为什么要用它？"></a>👴为什么要用它？</h5><ul>
<li>它观感极佳、语法简单(相对于Latex)、沉浸式文本编辑(理论上不需要动鼠标，呜呜呜word又要调字号了(🤦‍♂️))。而且它的逼格高(。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>很多的主流网站都支持Markdown语法(Stackoverflow,CSDN,洛谷，某乎好像也支持)。</li>
<li>排版效果不亚于一般的文档处理软件，方便阅读</li>
<li>身边人都在用（呜呜呜）。</li>
</ul>
<a id="more"></a>
<hr>
<p>(分隔线)</p>
<h4 id="二、行内语法"><a href="#二、行内语法" class="headerlink" title="二、行内语法"></a>二、行内语法</h4><h5 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h5><p>两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>
<blockquote>
<p>一级标题<br><code>=========</code><br>二级标题<br><code>---------</code></p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题   "></a>一级标题   </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote>
<p>2）使用<code>#</code>，可表示1-6级标题。</p>
<blockquote>
<p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题    </p>
</blockquote>
<h5 id="2-2-段落"><a href="#2-2-段落" class="headerlink" title="2.2 段落"></a>2.2 段落</h5><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<h5 id="2-3-区块引用"><a href="#2-3-区块引用" class="headerlink" title="2.3 区块引用"></a>2.3 区块引用</h5><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>
<blockquote>
<p>&gt; 区块引用<br>&gt;&gt; 嵌套引用  </p>
</blockquote>
<p>效果：</p>
<blockquote>
<p>区块引用  </p>
<blockquote>
<p>嵌套引用 </p>
</blockquote>
</blockquote>
<h5 id="2-4-斜体、粗体、删除线、下划线、背景高亮"><a href="#2-4-斜体、粗体、删除线、下划线、背景高亮" class="headerlink" title="2.4 斜体、粗体、删除线、下划线、背景高亮"></a>2.4 斜体、粗体、删除线、下划线、背景高亮</h5><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">*斜体*</span>或<span class="emphasis">_斜体_</span></span><br><span class="line">*<span class="strong">*粗体*</span><span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>*<span class="strong">*加粗斜体*</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">~~删除线~~</span></span><br><span class="line"><span class="strong">++下划线++</span></span><br><span class="line"><span class="strong">==背景高亮==</span></span><br></pre></td></tr></table></figure>
<p>效果：<br><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p>
<p>效果：<br> <em>斜体</em>，<em>斜体</em><br> <strong>粗体</strong>，<strong>粗体</strong></p>
<h5 id="2-5-列表和任务列表"><a href="#2-5-列表和任务列表" class="headerlink" title="2.5 列表和任务列表"></a>2.5 列表和任务列表</h5><ul>
<li>列表<br>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">\-</span>（+<span class="symbol">\*</span>） 第一项</span><br><span class="line"><span class="symbol">\-</span>（+<span class="symbol">\*</span>） 第二项</span><br><span class="line"><span class="symbol">\-</span> （+<span class="symbol">\*</span>）第三项</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>注意</strong>：标记后面最少有一个空格\制表符。若不在引用区块中，必须和前方段落之间存在空行。<br>效果：</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：<br>    1 . 第一项<br>    2 . 第二项<br>    3 . 第三项    </p>
<p>效果：</p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<ul>
<li>任务列表</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">+ <span class="selector-tag">-</span> <span class="selector-attr">[ ]</span> 任务一 未做任务 `<span class="selector-tag">-</span> + 空格 + <span class="selector-attr">[ ]</span>`</span><br><span class="line">  <span class="selector-tag">-</span> <span class="selector-attr">[x]</span> 任务二 已做任务 `<span class="selector-tag">-</span> + 空格 + <span class="selector-attr">[x]</span>`</span><br></pre></td></tr></table></figure>
<p>就有✔勾选框的效果了</p>
<ul>
<li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [x]</code></li>
<li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>
</ul>
<h5 id="2-6-超链接、页内链接、自动链接、注脚"><a href="#2-6-超链接、页内链接、自动链接、注脚" class="headerlink" title="2.6 超链接、页内链接、自动链接、注脚"></a>2.6 超链接、页内链接、自动链接、注脚</h5><ul>
<li>行内式<br>[]里写链接文字，()里写链接地址, ()中的””中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title前有一个空格。</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">建议去 [<span class="string">Github</span>](<span class="link">(https://github.com/</span>))多fork</span><br></pre></td></tr></table></figure>
<p>建议去 <a href="(https://github.com/)">Github</a>多fork</p>
<ul>
<li>参考式<br>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。</li>
</ul>
<p>语法说明：<br>参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址。</p>
<p>如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]<br>[链接文字]：链接地址的形式，见代码的最后一行。<br>比如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">我经常去的几个网站[<span class="string">Google</span>][<span class="symbol">1</span>]、[<span class="string">4399</span>][<span class="symbol">2</span>]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">http://www.google.com </span></span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">http://www.4399.com</span></span><br></pre></td></tr></table></figure>
<p>效果如下：<br>我经常去的几个网站<a href="http://www.google.com" target="_blank" rel="noopener">Google</a>、<a href="http://www.4399.com" target="_blank" rel="noopener">4399</a>。</p>
<ul>
<li>注脚<br>在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</li>
</ul>
<p><strong>注意</strong>：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]:<span class="link">Markdown是一种纯文本标记语言</span></span><br><span class="line"></span><br><span class="line">[<span class="symbol">^2</span>]:<span class="link">HyperText Markup Language 超文本标记语言</span></span><br></pre></td></tr></table></figure>
<p>使用 Markdown<a href="Markdown是一种纯文本标记语言">^1</a>可以效率的书写文档, 直接转换成 HTML[^2]。</p>
<p>[^2]:HyperText Markup Language 超文本标记语言</p>
<p>注：脚注自动被搬运到最后面，请到文章末尾查看，脚注后方的链接可以直接跳转回到加注的地方。</p>
<ul>
<li>锚点（页内超链接）</li>
<li>网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的，只支持在标题后插入锚点，其它地方无效。</li>
</ul>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">## <span class="number">0.</span> 目录&#123;#index&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>自动链接</li>
</ul>
<p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&amp;lt;</span>http://example.com/<span class="symbol">&amp;gt;</span> <span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span> </span><br><span class="line"><span class="symbol">&amp;lt;</span>address@example.com<span class="symbol">&amp;gt;</span></span><br></pre></td></tr></table></figure>
<p>这样子就会显示为：<br>&lt;<a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a>&gt; &emsp;&emsp;<br>&lt;<a href="mailto:address@example.com">address@example.com</a>&gt;</p>
<hr>
<h4 id="三、块语法"><a href="#三、块语法" class="headerlink" title="三、块语法"></a>三、块语法</h4><h5 id="3-1-内容目录"><a href="#3-1-内容目录" class="headerlink" title="3.1 内容目录"></a>3.1 内容目录</h5><p>在段落中填写<br>    <code>&gt;[TOC]</code> </p>
<p>以显示全文内容的目录结构。<br>效果参见最上方的目录。</p>
<h5 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h5><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在ESC键下方）包裹代码。</p>
<ul>
<li><p>行内式<br>源码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">C语言里的函数 `<span class="built_in">scanf</span>()` 怎么使用？</span><br></pre></td></tr></table></figure>

<p>效果：<br>C语言里的函数 <code>scanf()</code> 怎么使用？</p>
</li>
<li><p>缩进式多行代码<br>缩进 4 个空格或是 1 个制表符,制表符的宽度一般的文本编辑器可以自己定义。<br>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> &amp;lt;stdio.h&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(&amp;#<span class="number">34</span>;Hello world\n&amp;#<span class="number">34</span>;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>或者使用多个”`”来包裹代码</p>
</li>
</ul>
<h5 id="3-3-HTML标签"><a href="#3-3-HTML标签" class="headerlink" title="3.3 HTML标签"></a>3.3 HTML标签</h5><p> Markdown语法中支持嵌套 Html 标签，比如下图的表格</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>我=<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Fri<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Sat<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Sun<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>摸鱼<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>划水<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>睡觉<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
    <tr>
        <th rowspan="2">我=</th>
        <th>Fri</th>
        <th>Sat</th>
        <th>Sun</th>
    </tr>
    <tr>
        <td>摸鱼</td>
        <td>划水</td>
        <td>睡觉</td>
    </tr>
</table>

<h5 id="3-4-表格"><a href="#3-4-表格" class="headerlink" title="3.4 表格"></a>3.4 表格</h5><p>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。<br>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。<br>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。<br><code>-</code> 左对齐， <code>:-:</code> 中心对齐，<code>-:</code> 右对齐<br>例如：</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">  装备名称      </span>|<span class="string">  属性  </span>|<span class="string">  售价  </span>|</span><br><span class="line">|<span class="string">  -----------  </span>|<span class="string">  ------- </span>|<span class="string">  ------- </span>|</span><br><span class="line">|<span class="string">  卓越的开天    </span>|<span class="string">  力量+2，敏捷+8    </span>|<span class="string">  ￥999  </span>|</span><br><span class="line">|<span class="string">  屠龙刀        </span>|<span class="string">  对群龙王伤害翻倍  </span>|<span class="string">  ￥99   </span>|</span><br><span class="line">|<span class="string">  记事本（      </span>|<span class="string">  作业++      </span>|<span class="string">  ￥1    </span>|</span><br></pre></td></tr></table></figure>
<p>显示出来就是这样的：</p>
<table>
<thead>
<tr>
<th>装备名称</th>
<th>属性</th>
<th>售价</th>
</tr>
</thead>
<tbody><tr>
<td>卓越的开天</td>
<td>力量+2，敏捷+8</td>
<td>￥999</td>
</tr>
<tr>
<td>屠龙刀</td>
<td>对群龙王伤害翻倍</td>
<td>￥99</td>
</tr>
<tr>
<td>记事本（</td>
<td>作业++</td>
<td>￥1</td>
</tr>
</tbody></table>
<h5 id="3-5-Latex"><a href="#3-5-Latex" class="headerlink" title="3.5 Latex"></a>3.5 Latex</h5><p>这个就8用多说了，Latex的功能相当丰富，而markdown追求的是简洁，但我们仍然可以在markdown里使用Latex中使用<code>$ $</code>和<code>$$ $$</code>的功能。<br>附上一段上周问求作业的错误答案让大家看下效果:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$E(Y)&#x3D;E(\sum_&#123;i&#x3D;1&#125;^n E(Y_i))&#x3D;\sum_&#123;i&#x3D;1&#125;^n E(Y_i)&#x3D;\sum_&#123;i&#x3D;1&#125;^n \dfrac&#123;i\binom&#123;i-1&#125;&#123;k-1&#125;&#125;&#123;\binom&#123;n&#125;&#123;k&#125;&#125;&#x3D;\sum_&#123;i&#x3D;1&#125;^n \dfrac&#123;\binom&#123;i&#125;&#123;k&#125;&#125;&#123;\binom&#123;n&#125;&#123;k&#125;&#125;$$</span><br><span class="line"></span><br><span class="line">$$&#x3D;\dfrac&#123;0+\cdots 0 + \binom&#123;k&#125;&#123;k&#125;+\binom&#123;k+1&#125;&#123;k&#125;+\cdots \binom&#123;n&#125;&#123;k&#125;&#125;&#123;\binom&#123;n&#125;&#123;k&#125;&#125;&#x3D;\dfrac&#123;\binom&#123;k+1&#125;&#123;k+1&#125;+\binom&#123;k+1&#125;&#123;k&#125;+\cdots \binom&#123;n&#125;&#123;k&#125;&#125;&#123;\binom&#123;n&#125;&#123;k&#125;&#125;$$</span><br><span class="line"></span><br><span class="line">$$&#x3D;\dfrac&#123;\binom&#123;n+1&#125;&#123;k+1&#125;&#125;&#123;\binom&#123;n&#125;&#123;k&#125;&#125;&#x3D;\dfrac&#123;(n+1)!\times (n-k)! \times k!&#125;&#123;(n-k)!\times(k+1)!\times n!&#125;&#x3D;\dfrac&#123;n+1&#125;&#123;k+1&#125;$$</span><br></pre></td></tr></table></figure>

<p>$E(Y)=E(\sum_{i=1}^n E(Y_i))=\sum_{i=1}^n E(Y_i)=\sum_{i=1}^n \dfrac{i\binom{i-1}{k-1}}{\binom{n}{k}}=\sum_{i=1}^n \dfrac{\binom{i}{k}}{\binom{n}{k}}$</p>
<p>$=\dfrac{0+\cdots 0 + \binom{k}{k}+\binom{k+1}{k}+\cdots \binom{n}{k}}{\binom{n}{k}}=\dfrac{\binom{k+1}{k+1}+\binom{k+1}{k}+\cdots \binom{n}{k}}{\binom{n}{k}}$</p>
<p>$=\dfrac{\binom{n+1}{k+1}}{\binom{n}{k}}=\dfrac{(n+1)!\times (n-k)! \times k!}{(n-k)!\times(k+1)!\times n!}=\dfrac{n+1}{k+1}$</p>
<h5 id="3-6-分隔线"><a href="#3-6-分隔线" class="headerlink" title="3.6 分隔线"></a>3.6 分隔线</h5><p>这几种写法都可以产生分隔线</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="strong">*****</span></span><br><span class="line"><span class="bullet">- </span>- -</span><br><span class="line">-----------</span><br></pre></td></tr></table></figure>

<p>而效果都是一样的</p>
<hr>
<h5 id="3-7-特殊字"><a href="#3-7-特殊字" class="headerlink" title="3.7 特殊字"></a>3.7 特殊字</h5><p>部分从HTML中继承的特殊符号（转载自<a href="https://www.jianshu.com/p/72481849cd33" target="_blank" rel="noopener">子非鱼_YE</a>，有删改，侵删）</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
<th>HTML源码</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;</td>
<td>AND符号</td>
<td>&amp; amp;</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
<td>&amp; lt;</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
<td>&amp; gt;</td>
</tr>
<tr>
<td></td>
<td>空格</td>
<td>&amp; nbsp;</td>
</tr>
<tr>
<td>¿</td>
<td>倒问号</td>
<td>&amp; iquest;</td>
</tr>
<tr>
<td>?</td>
<td>问号</td>
<td>&amp; quest;</td>
</tr>
<tr>
<td>«</td>
<td>左书名号</td>
<td>&amp; laquo;</td>
</tr>
<tr>
<td>»</td>
<td>右书名号</td>
<td>&amp; raquo;</td>
</tr>
<tr>
<td>“</td>
<td>引号</td>
<td>&amp; quot;    quote</td>
</tr>
<tr>
<td>‘</td>
<td>左单引号</td>
<td>&amp; lsquo;</td>
</tr>
<tr>
<td>’</td>
<td>右单引号</td>
<td>&amp; rsquo:</td>
</tr>
<tr>
<td>“</td>
<td>左双引号</td>
<td>&amp; ldquo:</td>
</tr>
<tr>
<td>”</td>
<td>右双引号</td>
<td>&amp; rdquo:</td>
</tr>
<tr>
<td>¶</td>
<td>段落符号</td>
<td>&amp; para;</td>
</tr>
<tr>
<td>§</td>
<td>章节符</td>
<td>&amp; sect;</td>
</tr>
<tr>
<td>×</td>
<td>乘号</td>
<td>&amp; times;</td>
</tr>
<tr>
<td>÷</td>
<td>除号</td>
<td>&amp; divide;</td>
</tr>
<tr>
<td>±</td>
<td>加减号</td>
<td>&amp; plusmn;</td>
</tr>
<tr>
<td>ƒ</td>
<td>function</td>
<td>&amp; fnof;</td>
</tr>
<tr>
<td>√</td>
<td>根号</td>
<td>&amp; radic;</td>
</tr>
<tr>
<td>∞</td>
<td>无穷大</td>
<td>&amp; infin;</td>
</tr>
<tr>
<td>°</td>
<td>度</td>
<td>&amp; deg;    d</td>
</tr>
<tr>
<td>≠</td>
<td>不等号</td>
<td>&amp; ne;</td>
</tr>
<tr>
<td>≡</td>
<td>恒等于</td>
<td>&amp; equiv;</td>
</tr>
<tr>
<td>≤</td>
<td>小于等于</td>
<td>&amp; le;</td>
</tr>
<tr>
<td>≥</td>
<td>大于等于</td>
<td>&amp; ge;</td>
</tr>
<tr>
<td>⊥</td>
<td>垂直符号</td>
<td>&amp; perp;</td>
</tr>
<tr>
<td>←</td>
<td>左箭头</td>
<td>&amp; larr;</td>
</tr>
<tr>
<td>→</td>
<td>右箭头</td>
<td>&amp; rarr;</td>
</tr>
<tr>
<td>↑</td>
<td>上箭头</td>
<td>&amp; uarr;</td>
</tr>
<tr>
<td>↓</td>
<td>下箭头</td>
<td>&amp; darr;</td>
</tr>
<tr>
<td>↔</td>
<td>水平箭头</td>
<td>&amp; harr;</td>
</tr>
<tr>
<td>↕</td>
<td>竖直箭头</td>
<td>&amp; varr;</td>
</tr>
<tr>
<td>⇐</td>
<td>双线左箭头</td>
<td>&amp; lArr;</td>
</tr>
<tr>
<td>⇒</td>
<td>双线右箭头</td>
<td>&amp; rArr;</td>
</tr>
<tr>
<td>⇑</td>
<td>双线上箭头</td>
<td>&amp; uArr;</td>
</tr>
<tr>
<td>⇓</td>
<td>双线上箭头</td>
<td>&amp; dArr;</td>
</tr>
<tr>
<td>⇔</td>
<td>双线水平双箭头</td>
<td>&amp; hArr;</td>
</tr>
<tr>
<td>⇕</td>
<td>双线竖直箭头</td>
<td>&amp; vArr;</td>
</tr>
<tr>
<td>♠</td>
<td>黑桃</td>
<td>&amp; spades;</td>
</tr>
<tr>
<td>♥</td>
<td>红桃</td>
<td>&amp; hearts;</td>
</tr>
<tr>
<td>♣</td>
<td>梅花</td>
<td>&amp; clubs;</td>
</tr>
<tr>
<td>♦</td>
<td>方块</td>
<td>&amp; diams;</td>
</tr>
<tr>
<td>©</td>
<td>版权</td>
<td>&amp; copy;</td>
</tr>
<tr>
<td>®</td>
<td>注册商标</td>
<td>&amp; reg;</td>
</tr>
<tr>
<td>™</td>
<td>商标</td>
<td>&amp; trade;</td>
</tr>
<tr>
<td>¥</td>
<td>人民币</td>
<td>&amp; yen;</td>
</tr>
<tr>
<td>€</td>
<td>欧元</td>
<td>&amp; euro;</td>
</tr>
<tr>
<td>¢</td>
<td>美分</td>
<td>&amp; cent;</td>
</tr>
<tr>
<td>£</td>
<td>英磅</td>
<td>&amp; pound;</td>
</tr>
<tr>
<td>⊕</td>
<td>异或</td>
<td>&amp; oplus;</td>
</tr>
<tr>
<td>½</td>
<td>二分之一</td>
<td>&amp; frac12;</td>
</tr>
<tr>
<td>¼</td>
<td>四分之一</td>
<td>&amp; frac14;</td>
</tr>
<tr>
<td>‰</td>
<td>千分符号</td>
<td>&amp; permil;</td>
</tr>
<tr>
<td>θ</td>
<td>theta</td>
<td>&amp; theta;</td>
</tr>
<tr>
<td>λ</td>
<td>lambda</td>
<td>&amp; lambda;</td>
</tr>
<tr>
<td>σ</td>
<td>sigma</td>
<td>&amp; sigma;</td>
</tr>
<tr>
<td>τ</td>
<td>tau</td>
<td>&amp; tau;</td>
</tr>
</tbody></table>
<hr>
<h4 id="常用的Markdown工具。"><a href="#常用的Markdown工具。" class="headerlink" title="常用的Markdown工具。"></a>常用的Markdown工具。</h4><h6 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h6><ul>
<li><strong>Vscode</strong> 万能编辑器，都能装编译器变IDE，写Markdown不是小意思🐎，记得装插件，Vsc自带的侧边预览着实让我头大。</li>
<li><strong>Typora</strong> 貌似是口碑最好的Markdown编辑器，极简主义+观感很好的实时预览（Vscode自带的侧边预览效果就像看夜间模式的电子书）。    </li>
<li><strong>记事本</strong> 真正的企业级玩家的威能武器 <strong>（</strong> 记事本就是零号世界线（雾。  </li>
</ul>
<hr>
<p>下面就出现我们刚才说的<strong>注脚</strong>，让我们回看一下：</p>
<blockquote>
<p><strong>注意</strong>：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。</p>
</blockquote>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog小记</title>
    <url>/2020/04/21/Blog%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<p>呜呜呜，整了一天终于把自己的blog打理好了，</p>
<ul>
<li><input disabled="" type="checkbox"> <p>下午的微积分课还没听</p>
</li>
<li><input disabled="" type="checkbox"> <p>上周的大物课还没听，大物作业也咕咕咕了，马上还要大物期中考试</p>
</li>
<li><input disabled="" type="checkbox"> <p>明天还有问求课，不过害好是🐜🐜的课</p>
</li>
<li><input disabled="" type="checkbox"> <p>又是不会Oj的一周，随机算法杀我</p>
</li>
<li><input checked="" disabled="" type="checkbox"> <p>啥都不说了，早点睡吧(×)</p>
</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode环境配置</title>
    <url>/2020/04/22/Vscode%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><i class="fa fa-battery-quarter" aria-hidden="true"></i> 呜呜呜我太困了明天（早上一定更新😭😭😭</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 明天还有大物课<i class="fa fa-bolt" aria-hidden="true"></i></li>
</ul>
<hr>
<p>咕咕咕更新了🐦</p>
<p><a href="http://www.mingw-w64.org/doku.php" target="_blank" rel="noopener">MinGw</a>和<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Vscode</a>的安装我就不细说的，百度一下就可以了（点击超链接有惊喜👋）</p>
<h4 id="搭建C-运行环境时的两个设置文件如何配置："><a href="#搭建C-运行环境时的两个设置文件如何配置：" class="headerlink" title="搭建C++运行环境时的两个设置文件如何配置："></a>搭建C++运行环境时的两个设置文件如何配置：</h4><a id="more"></a>
<hr>
<p>(分隔线)</p>
<ul>
<li>launch.json的配置<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"g++.exe - Start Debugging"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;fileDirname&#125;"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">false</span>,<span class="comment">//为true开启控制台，为false关闭控制台</span></span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"miDebuggerPath"</span>: <span class="string">"C:\\MinGW\\bin\\gdb.exe"</span>,<span class="comment">//这里是你的MinGw的安装位置</span></span><br><span class="line">            <span class="attr">"setupCommands"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"为 gdb 启用整齐打印"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"preLaunchTask"</span>: <span class="string">"g++.exe build active file"</span><span class="comment">//这是你的task任务的名称，和你tasks.json中的"lable"要相同</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>tasks.json的配置<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"tasks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"g++.exe build active file"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"C:\\MinGW\\bin\\g++.exe"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-g"</span>,</span><br><span class="line">                <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">                <span class="string">"-o"</span>,</span><br><span class="line">                <span class="string">"$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"cwd"</span>: <span class="string">"C:\\MinGW\\bin"</span><span class="comment">//这里是你的MinGw的安装位置</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"problemMatcher"</span>: &#123;</span><br><span class="line">                <span class="attr">"base"</span>: <span class="string">"$gcc"</span>,</span><br><span class="line">                <span class="attr">"fileLocation"</span>: <span class="string">"absolute"</span><span class="comment">//注意一下这句话</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"group"</span>: <span class="string">"build"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<code>&quot;fileLocation&quot;: &quot;absolute&quot;</code>上面这句话如果不加的话，就会出现这种情况:<blockquote>
<p>下面两张图片是我在<a href="https://stackoverflow.com/questions/61291620/problem-in-vscode-gcc-problem-matcher-to-recognize-file-path-in-c-compiler" target="_blank" rel="noopener">Stackoverflow</a>上提问的附件图片，加载不出来概不负责（雾</p>
</blockquote>
</li>
<li><img src="https://i.stack.imgur.com/jGqFY.png" alt="1"><br>编译报错正常</li>
<li><img src="https://i.stack.imgur.com/IoOiM.png" alt="2"><br>但是你想直接点击那个错误跳转到错误行就会有这样的错误提示</li>
</ul>
<p>我改了好几次tasks.json和launch.json的配置都没有用，后来<a href="https://stackoverflow.com/questions/61291620/problem-in-vscode-gcc-problem-matcher-to-recognize-file-path-in-c-compiler" target="_blank" rel="noopener">Stackoverflow</a>上的dalao向我解释了一下</p>
<blockquote>
<p>The problem is the <code>&quot;$gcc&quot;</code> problem matcher defined in <code>ms-vscode.cpptools-0.XX.0</code> extension.<br>It is the same problem matcher as mentioned in the [Task documentation about problem matchers][1].<br>This matcher uses relative paths. But MinGW with g++ v8 uses absolute file paths in the error when the source file is supplied with absolute file path in the <code>args</code> property of the task.<br>Solution is to modify the <code>&quot;$gcc&quot;</code> problem matcher and use absolute file path.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"problemMatcher"</span>: &#123;</span><br><span class="line">  <span class="string">"base"</span>: <span class="string">"<span class="variable">$gcc</span>"</span>,</span><br><span class="line">  <span class="string">"fileLocation"</span>: <span class="string">"absolute"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>改成绝对路径就彳亍了，相对路径会导致路径重复。</p>
]]></content>
      <categories>
        <category>Vscode</category>
      </categories>
      <tags>
        <tag>Vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode+WSL部署</title>
    <url>/2020/04/23/Vscode-WSL%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Vscode</category>
      </categories>
      <tags>
        <tag>Vscode</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Scheduler</title>
    <url>/2020/04/26/Scheduler/</url>
    <content><![CDATA[<p>讲真，没有de过这么长时间的代码</p>
<p>前前后后将近重写了三次，因为一开始选择的写法貌似不是正解因而寸步难行</p>
<p>星期四晚上好不容易写出了1ed，星期五de了一天到12点决定作废。</p>
<p>然后一直写到4点多，写出了2ed，原以为会A的。</p>
<p>结果折腾到下午4点，从WA97到WA73到WA38到WA28，还是没有出结果，一直卡在了WA28</p>
<p>挂出这段让人心碎的随机调度代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Task</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,type,atime,btime;</span><br><span class="line">&#125; tasktmp;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Time</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> act,bct,ansat,ansbt,idA,idB;</span><br><span class="line">&#125; ti[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> n,t1=<span class="number">0</span>,t2=<span class="number">0</span>,t3=<span class="number">0</span>,num=<span class="number">0</span>,anstime=<span class="number">0x3f3f3f3f</span>,l1=<span class="number">0</span>,l2=<span class="number">0</span>,id[<span class="number">3</span>][<span class="number">100</span>]=&#123;&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">Task</span>&gt; taskA,taskB,task1,task2,task3,part1,part2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="built_in">Task</span> x, <span class="built_in">Task</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Task</span> tmp;</span><br><span class="line">    tmp = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = tmp;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ans</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> timeA = <span class="number">0</span>, timeB = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;l1; i++)</span><br><span class="line">    	tasktmp=part1[i],taskA.push_back(tasktmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l1; i&lt;n;i++)</span><br><span class="line">		tasktmp=part2[i-l1],taskA.push_back(tasktmp);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;l2; i++)</span><br><span class="line">    	tasktmp=part2[i],taskB.push_back(tasktmp);</span><br><span class="line">    	</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l2; i&lt;n;i++)</span><br><span class="line">		tasktmp=part1[i-l2],taskB.push_back(tasktmp);</span><br><span class="line">    <span class="comment">//////////////////initial</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l1; i++)</span><br><span class="line">    &#123;	</span><br><span class="line">		ti[i].act=timeA; </span><br><span class="line">		timeA+=taskA[i].atime; </span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l1; i&lt;n; i++)</span><br><span class="line">    &#123;	</span><br><span class="line">		ti[i-l1].bct=timeB;</span><br><span class="line">		timeB+=taskB[i-l1].btime;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">///A processor judge</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l1; i&lt;n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(timeA&gt;=ti[i-l1].bct+taskA[i-l1].btime )</span><br><span class="line">		&#123;</span><br><span class="line">			ti[i].act=timeA;</span><br><span class="line">			timeA+=taskA[i].atime;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			timeA=ti[i-l1].bct+taskA[i-l1].btime;</span><br><span class="line">			ti[i].act=timeA;</span><br><span class="line">			timeA+=taskA[i].atime;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">///B processor judge</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l2; i&lt;n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(timeB&gt;=ti[i-l2].act+taskA[i-l2].atime)</span><br><span class="line">		&#123;</span><br><span class="line">			ti[i].bct=timeB;</span><br><span class="line">			timeB+=taskB[i].btime;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			timeB=ti[i-l2].act+taskA[i-l2].atime;</span><br><span class="line">			ti[i].bct=timeB;</span><br><span class="line">			timeB+=taskB[i].btime;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">max</span>(timeA,timeB)&lt;anstime)</span><br><span class="line">    &#123;</span><br><span class="line">        anstime=<span class="built_in">max</span>(timeA,timeB);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">        	ti[i].ansat=ti[i].act;</span><br><span class="line">        	ti[i].ansbt=ti[i].bct;</span><br><span class="line">        	ti[i].idA=taskA[i].id;</span><br><span class="line">        	ti[i].idB=taskB[i].id;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    taskA.<span class="built_in">clear</span>();</span><br><span class="line">    taskB.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos &gt; num<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        l1=task1.<span class="built_in">size</span>();l2=task2.<span class="built_in">size</span>();</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l1;i++)</span><br><span class="line">			tasktmp=task1[i],part1.push_back(tasktmp);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l2;i++)</span><br><span class="line">			tasktmp=task2[i],part2.push_back(tasktmp);</span><br><span class="line">	</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">        	<span class="keyword">if</span>(l1&gt;<span class="number">0</span>) </span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> a1=rand()%l1,a2=rand()%l1;</span><br><span class="line">				exchange(part1[a1], part1[a2]);</span><br><span class="line">			&#125;</span><br><span class="line">    		<span class="keyword">if</span>(l2&gt;<span class="number">0</span>) </span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> b1=rand()%l2,b2=rand()%l2;</span><br><span class="line">				exchange(part2[b1], part2[b2]);</span><br><span class="line">			&#125;</span><br><span class="line">            ans();   </span><br><span class="line">        &#125;</span><br><span class="line">        part1.<span class="built_in">clear</span>();</span><br><span class="line">        part2.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> 		<span class="built_in">Task</span> tt=task3[pos];</span><br><span class="line"> 		</span><br><span class="line"> 		tt.type=<span class="number">1</span>;task1.push_back(tt);</span><br><span class="line">	    solve(pos + <span class="number">1</span>);</span><br><span class="line">	    <span class="built_in">vector</span>&lt;<span class="built_in">Task</span>&gt;::iterator it=task1.<span class="built_in">end</span>();it--;task1.erase(it);</span><br><span class="line">	    </span><br><span class="line">	    tt.type=<span class="number">2</span>;task2.push_back(tt);</span><br><span class="line">	    solve(pos + <span class="number">1</span>);it=task2.<span class="built_in">end</span>();it--;task2.erase(it);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(<span class="keyword">unsigned</span>(<span class="number">114514</span>));  </span><br><span class="line">    srand(<span class="keyword">unsigned</span>(time(<span class="literal">nullptr</span>)));</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;t1,&amp;t2,&amp;t3);</span><br><span class="line">        tasktmp.id = i;</span><br><span class="line">        tasktmp.type = t1;</span><br><span class="line">        tasktmp.atime = t2;</span><br><span class="line">        tasktmp.btime = t3;</span><br><span class="line">        <span class="keyword">switch</span>(t1)</span><br><span class="line">		&#123;</span><br><span class="line">	        <span class="keyword">case</span> <span class="number">1</span>: task1.push_back(tasktmp);<span class="keyword">break</span>;</span><br><span class="line">	        <span class="keyword">case</span> <span class="number">2</span>: task2.push_back(tasktmp);<span class="keyword">break</span>;</span><br><span class="line">	        <span class="keyword">case</span> <span class="number">3</span>: task3.push_back(tasktmp);num++;<span class="keyword">break</span>;</span><br><span class="line">	    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    num=task3.<span class="built_in">size</span>();</span><br><span class="line">    solve(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, anstime);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"A %d %d\n"</span>, ti[i].ansat, ti[i].idA);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"B %d %d\n"</span>, ti[i].ansbt, ti[i].idB);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>心态♥真的炸了，👴♥累，再也不想写OJ了，这日子比高三还要苦</p>
]]></content>
      <categories>
        <category>oj</category>
      </categories>
      <tags>
        <tag>oj</tag>
      </tags>
  </entry>
</search>
